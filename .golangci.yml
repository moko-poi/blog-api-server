# golangci-lint configuration
# https://golangci-lint.run/usage/configuration/

run:
  timeout: 5m
  issues-exit-code: 1
  tests: true
  skip-dirs:
    - vendor
    - tmp
    - build
  skip-files:
    - ".*\\.pb\\.go$"
    - ".*_generated\\.go$"

output:
  formats:
    - format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  uniq-by-line: true
  sort-results: true

linters:
  enable:
    # Default linters
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - typecheck
    - unused
    
    # Additional recommended linters
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    - contextcheck
    - cyclop
    - dupl
    - durationcheck
    - errname
    - errorlint
    - execinquery
    - exhaustive
    - exportloopref
    - forbidigo
    - funlen
    - gci
    - ginkgolinter
    - gocheckcompilerdirectives
    - gochecknoglobals
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - godox
    - goerr113
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - gomnd
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - grouper
    - importas
    - interfacebloat
    - ireturn
    - lll
    - loggercheck
    - maintidx
    - makezero
    - misspell
    - nakedret
    - nestif
    - nilerr
    - nilnil
    - nlreturn
    - noctx
    - nolintlint
    - nonamedreturns
    - nosprintfhostport
    - predeclared
    - promlinter
    - reassign
    - revive
    - rowserrcheck
    - sqlclosecheck
    - stylecheck
    - tenv
    - testableexamples
    - testpackage
    - thelper
    - tparallel
    - unconvert
    - unparam
    - usestdlibvars
    - wastedassign
    - whitespace
    - wrapcheck
    - wsl

  disable:
    # Disable linters that might be too strict for this project
    - varnamelen
    - tagliatelle
    - exhaustivestruct
    - exhaustruct
    - forcetypeassert
    - gochecksumtype

linters-settings:
  # Cyclomatic complexity
  cyclop:
    max-complexity: 15
    package-average: 10.0

  # Duplicate code detection
  dupl:
    threshold: 100

  # Function length
  funlen:
    lines: 100
    statements: 50

  # Cognitive complexity
  gocognit:
    min-complexity: 15

  # Constants detection
  goconst:
    min-len: 2
    min-occurrences: 3

  # Code complexity
  gocyclo:
    min-complexity: 15

  # Magic numbers
  gomnd:
    ignored-numbers:
      - "0"
      - "1"
      - "2"
      - "3"
      - "8080"  # Default port
      - "404"
      - "500"
    ignored-functions:
      - "make"
      - "time.*"
      - "strconv.*"

  # Line length
  lll:
    line-length: 120

  # Naked returns
  nakedret:
    max-func-lines: 30

  # Nested if statements
  nestif:
    min-complexity: 5

  # Naming conventions
  revive:
    rules:
      - name: var-naming
      - name: package-comments
      - name: exported
      - name: unexported-return
      - name: time-naming
      - name: context-as-argument
      - name: context-keys-type

  # Whitespace
  wsl:
    strict-append: true
    allow-assign-and-call: true
    allow-multiline-assign: true
    allow-separated-leading-comment: true

issues:
  max-issues-per-linter: 0
  max-same-issues: 0
  new: false

  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - gomnd
        - goconst
        - funlen
        - maintidx
        - gocognit
        - cyclop
        - dupl

    # Exclude some linters from main.go
    - path: cmd/server/main\.go
      linters:
        - gochecknoinits

    # Allow TODO comments in development
    - source: "TODO|FIXME|HACK"
      linters:
        - godox

    # Allow long lines in generated code
    - source: "//go:generate"
      linters:
        - lll

  # Show only new issues: if there are unstaged changes or untracked files,
  # only those changes are analyzed, else only changes in HEAD~ are analyzed.
  new-from-rev: HEAD~1